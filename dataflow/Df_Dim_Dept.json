{
	"name": "Df_Dim_Dept",
	"properties": {
		"folder": {
			"name": "Assessment-2"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Ds_Mismui_CleanData",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "Ds_Mismui_Dim_Department",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "select1"
				},
				{
					"name": "window1"
				},
				{
					"name": "aggregate1"
				},
				{
					"name": "select2"
				}
			],
			"scriptLines": [
				"source(output(",
				"          seriesCode as string,",
				"          departmentCode as string,",
				"          categoryCode as string,",
				"          categoryName as string,",
				"          searchCategoryCode as string,",
				"          seriesName as string,",
				"          brandCode as string,",
				"          brandUrlCode as string,",
				"          brandName as string,",
				"          seriesStatus as string,",
				"          catchCopy as string,",
				"          minStandardDaysToShip as string,",
				"          maxStandardDaysToShip as string,",
				"          directCartType as string,",
				"          priceCheckLessFlag as string,",
				"          minStandardUnitPrice as double,",
				"          maxStandardUnitPrice as double,",
				"          minPricePerPiece as string,",
				"          maxPricePerPiece as string,",
				"          recommendFlag as string,",
				"          volumeDiscountFlag as string,",
				"          cValueFlag as string,",
				"          stockItemFlag as string,",
				"          displayStandardPriceFlag as string,",
				"          discontinuedProductFlag as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> source1",
				"source1 select(mapColumn(",
				"          departmentCode",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"aggregate1 window(asc(departmentCode, true),",
				"     Id = rowNumber()) ~> window1",
				"select1 aggregate(groupBy(departmentCode),",
				"     count = count()) ~> aggregate1",
				"window1 select(mapColumn(",
				"          departmentCode,",
				"          Id",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select2",
				"select2 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     recreate:true,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> sink1"
			]
		}
	}
}
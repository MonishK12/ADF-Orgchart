{
	"name": "Df_Clean_Misumi",
	"properties": {
		"folder": {
			"name": "Assessment-2"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Ds_MisumiSqlRawData",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "Ds_Misumi_CleanData",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "aggregate1"
				},
				{
					"name": "derivedColumn1"
				},
				{
					"name": "select1"
				}
			],
			"scriptLines": [
				"source(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> source1",
				"source1 aggregate(groupBy(seriesCode),",
				"     each(match(name!='seriesCode'), $$ = first($$))) ~> aggregate1",
				"aggregate1 derive(minStandardUnitPrice = iifNull(minStandardUnitPrice, 0, minStandardUnitPrice),",
				"          maxStandardUnitPrice = iifNull(maxStandardUnitPrice, 0, maxStandardUnitPrice)) ~> derivedColumn1",
				"derivedColumn1 select(mapColumn(",
				"          seriesCode,",
				"          departmentCode,",
				"          categoryCode,",
				"          categoryName,",
				"          seriesName,",
				"          brandCode,",
				"          brandUrlCode,",
				"          brandName,",
				"          seriesStatus,",
				"          catchCopy,",
				"          minStandardDaysToShip,",
				"          maxStandardDaysToShip,",
				"          directCartType,",
				"          priceCheckLessFlag,",
				"          minStandardUnitPrice,",
				"          maxStandardUnitPrice,",
				"          minPricePerPiece,",
				"          maxPricePerPiece,",
				"          recommendFlag,",
				"          volumeDiscountFlag,",
				"          cValueFlag,",
				"          stockItemFlag,",
				"          displayStandardPriceFlag,",
				"          discontinuedProductFlag",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     recreate:true,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> sink1"
			]
		}
	}
}
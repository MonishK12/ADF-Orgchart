{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "DF-Orgchart"
		},
		"Ls_MongoDb_Orgchart_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'Ls_MongoDb_Orgchart'"
		},
		"Ls_SqlDB_Organizationchart_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'Ls_SqlDB_Organizationchart'"
		},
		"Ls_MongoDb_Orgchart_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "orgchart"
		},
		"Ls_SqlDB_Organizationchart_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "sqlserver-a.database.windows.net"
		},
		"Ls_SqlDB_Organizationchart_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "sqldb_orgchart"
		},
		"Ls_SqlDB_Organizationchart_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "Monish"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Ls_MongoDb_Orgchart')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "MongoDbAtlas",
				"typeProperties": {
					"connectionString": "[parameters('Ls_MongoDb_Orgchart_connectionString')]",
					"database": "[parameters('Ls_MongoDb_Orgchart_properties_typeProperties_database')]",
					"driverVersion": "v2"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Ls_SqlDB_Organizationchart')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('Ls_SqlDB_Organizationchart_properties_typeProperties_server')]",
					"database": "[parameters('Ls_SqlDB_Organizationchart_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('Ls_SqlDB_Organizationchart_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('Ls_SqlDB_Organizationchart_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Ds_Mongo_Admin')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Ls_MongoDb_Orgchart",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "MongoDbAtlasCollection",
				"schema": [],
				"typeProperties": {
					"collection": "admins"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Ls_MongoDb_Orgchart')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Ds_Mongo_Users')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Ls_MongoDb_Orgchart",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "MongoDbAtlasCollection",
				"schema": [],
				"typeProperties": {
					"collection": "Users"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Ls_MongoDb_Orgchart')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Ds_Sql_Admin')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Ls_SqlDB_Organizationchart",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "raw",
					"table": "admin"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Ls_SqlDB_Organizationchart')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Ds_Sql_Clean_Admin')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Ls_SqlDB_Organizationchart",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "prep",
					"table": "cleanAdmin"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Ls_SqlDB_Organizationchart')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Ds_Sql_Clean_Employee')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Ls_SqlDB_Organizationchart",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "prep",
					"table": "CleanEmployee"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Ls_SqlDB_Organizationchart')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Ds_Sql_Users')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Ls_SqlDB_Organizationchart",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "raw",
					"table": "employees"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Ls_SqlDB_Organizationchart')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Pl_Orgchart')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Users",
						"description": "Users data from mongo to Sql",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "MongoDbAtlasSource",
								"batchSize": 100
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "drop table if exists raw.employees",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['_id']['$oid']"
										},
										"sink": {
											"name": "id",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['name']"
										},
										"sink": {
											"name": "name",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['email']"
										},
										"sink": {
											"name": "email",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['password']"
										},
										"sink": {
											"name": "password",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['role']"
										},
										"sink": {
											"name": "role",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['department']"
										},
										"sink": {
											"name": "department",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['reportsTo']"
										},
										"sink": {
											"name": "reportsTo",
											"type": "String"
										}
									}
								],
								"mapComplexValuesToString": true
							}
						},
						"inputs": [
							{
								"referenceName": "Ds_Mongo_Users",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Ds_Sql_Users",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Admin",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "MongoDbAtlasSource",
								"batchSize": 100
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "drop table if exists raw.admin",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['_id']['$oid']"
										},
										"sink": {
											"name": "id",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['name']"
										},
										"sink": {
											"name": "name",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['email']"
										},
										"sink": {
											"name": "email",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['password']"
										},
										"sink": {
											"name": "password",
											"type": "String"
										}
									}
								],
								"mapComplexValuesToString": true
							}
						},
						"inputs": [
							{
								"referenceName": "Ds_Mongo_Admin",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Ds_Sql_Admin",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Staging"
				},
				"annotations": [],
				"lastPublishTime": "2024-08-28T09:55:21Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Ds_Mongo_Users')]",
				"[concat(variables('factoryId'), '/datasets/Ds_Sql_Users')]",
				"[concat(variables('factoryId'), '/datasets/Ds_Mongo_Admin')]",
				"[concat(variables('factoryId'), '/datasets/Ds_Sql_Admin')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Df_Clean_Admin')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Ds_Sql_Admin",
								"type": "DatasetReference"
							},
							"name": "SqlAdmin"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Ds_Sql_Clean_Admin",
								"type": "DatasetReference"
							},
							"name": "Cleandata"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          id as string,",
						"          name as string,",
						"          email as string,",
						"          password as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> SqlAdmin",
						"SqlAdmin sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> Cleandata"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Ds_Sql_Admin')]",
				"[concat(variables('factoryId'), '/datasets/Ds_Sql_Clean_Admin')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Df_Clean_Employee')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Ds_Sql_Users",
								"type": "DatasetReference"
							},
							"name": "SqlEmployee"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Ds_Sql_Clean_Employee",
								"type": "DatasetReference"
							},
							"name": "CleanData"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          id as string,",
						"          name as string,",
						"          email as string,",
						"          password as string,",
						"          role as string,",
						"          department as string,",
						"          reportsTo as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> SqlEmployee",
						"SqlEmployee sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> CleanData"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Ds_Sql_Users')]",
				"[concat(variables('factoryId'), '/datasets/Ds_Sql_Clean_Employee')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Pl_CleanData')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Clean Admin Data",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Df_Clean_Admin",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"SqlAdmin": {},
									"Cleandata": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Clean Employee Data",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Df_Clean_Employee",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"SqlEmployee": {},
									"CleanData": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Preparation"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/Df_Clean_Admin')]",
				"[concat(variables('factoryId'), '/dataflows/Df_Clean_Employee')]"
			]
		}
	]
}